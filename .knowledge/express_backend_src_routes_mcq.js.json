{"is_source_file": true, "format": "JavaScript (CommonJS modules)", "description": "This file defines Express.js routes for managing multiple-choice questions (MCQ) and answers in a real-time analytics dashboard. It includes endpoints for creating questions, retrieving questions, submitting answers, and related middleware integrations. It also contains Swagger API documentation annotations.", "external_files": ["../middleware", "../models/Question", "../models/Answer", "../models/UserEvent", "../socket"], "external_methods": ["requireAuth", "requireAdmin", "Question.find", "Question.findById", "Answer.prototype.save", "UserEvent.prototype.save", "getIO"], "published": ["router"], "classes": [{"name": "Question", "description": "Mongoose model for MCQ questions, with schema including text, options, correct answer index, and metadata."}, {"name": "Answer", "description": "Mongoose model for answers submitted by users, including question reference, user info, selected option, correctness, and timestamp."}, {"name": "UserEvent", "description": "Mongoose model for logging user events such as answers for analytics."}], "methods": [{"name": "POST /api/questions", "description": "Admins can create new MCQ questions with options and correct answer index."}, {"name": "GET /api/questions", "description": "Public endpoint to list MCQ questions without correct answer index."}, {"name": "POST /api/answers", "description": "Authenticated users submit answers to questions. The answer correctness is evaluated, real-time answer events are emitted via Socket.io, and user events are logged."}], "calls": ["Question.find()", "Question.findById()", "Answer.prototype.save()", "UserEvent.prototype.save()", "getIO().emit()"], "search-terms": ["mcq questions", "real-time answers", "socket.io emit", "question creation route", "answer submission route"], "state": 2, "file_id": 24, "knowledge_revision": 66, "git_revision": "92900507626a79a162ef1467005011a13c6c1284", "revision_history": [{"62": "92900507626a79a162ef1467005011a13c6c1284"}, {"66": "92900507626a79a162ef1467005011a13c6c1284"}], "ctags": [{"_type": "tag", "name": "Answer", "path": "/home/kavia/workspace/code-generation/real-time-analytics-dashboard-182952-182961/express_backend/src/routes/mcq.js", "pattern": "/^const Answer = require('..\\/models\\/Answer');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "Question", "path": "/home/kavia/workspace/code-generation/real-time-analytics-dashboard-182952-182961/express_backend/src/routes/mcq.js", "pattern": "/^const Question = require('..\\/models\\/Question');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "UserEvent", "path": "/home/kavia/workspace/code-generation/real-time-analytics-dashboard-182952-182961/express_backend/src/routes/mcq.js", "pattern": "/^const UserEvent = require('..\\/models\\/UserEvent');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "express", "path": "/home/kavia/workspace/code-generation/real-time-analytics-dashboard-182952-182961/express_backend/src/routes/mcq.js", "pattern": "/^const express = require('express');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/real-time-analytics-dashboard-182952-182961/express_backend/src/routes/mcq.js", "pattern": "/^const router = express.Router();$/", "language": "JavaScript", "kind": "constant"}], "hash": "453c34b3961993b74ece880ed328b70a", "format-version": 4, "code-base-name": "express_backend", "filename": "express_backend/src/routes/mcq.js"}